<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sohu.tv.digg</groupId>
	<artifactId>digg-all</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>digg-all Webapp</name>
	<url>http://maven.apache.org</url>

	<repositories>
		<repository>
			<id>snapshots-nexus</id>
			<url>http://dev.hd.sohu.com.cn/nexus/content/repositories/snapshots</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Nexus</id>
			<name>Nexus Public Repository</name>
			<url>http://dev.hd.sohu.com.cn/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>sohu.nexus</id>
			<url>http://index.tv.sohuno.com/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>Nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://dev.hd.sohu.com.cn/nexus/content/repositories/releases</url>
		</repository>
		<repository>
			<id>Nexus-3rd</id>
			<name>Nexus local Repository</name>
			<url>http://dev.hd.sohu.com.cn/nexus/content/repositories/3rdparty</url>
		</repository>
		<repository>
			<id>Nexus-snapshot</id>
			<name>Nexus local snapshot</name>
			<url>http://dev.hd.sohu.com.cn/nexus/content/repositories/snapshots</url>
		</repository>
		<repository>
			<id>Nexus-xml</id>
			<url>http://maven.tamingtext.com/repos/</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.2.3.RELEASE</spring.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix</artifactId>
				<version>1.0.7.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.9.2.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- java relative -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- commons relative -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<!--Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!--log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.1</version>
		</dependency>
		<!-- third part -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.31</version>
		</dependency>
		<!-- sohu -->
		<dependency>
			<groupId>com.sohu.cache</groupId>
			<artifactId>LocalCache</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>com.sohu.xmemcached</groupId>
			<artifactId>xmemcached</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>com.sohu.blog</groupId>
			<artifactId>blog-base-core</artifactId>
			<version>1.0.4-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.sohu.tv</groupId>
			<artifactId>hot-configs</artifactId>
			<version>1.0</version>
		</dependency>


		<!--表示为web工程 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--暴露各种指标 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
		</dependency>
		<dependency>
			<groupId>com.netflix.zuul</groupId>
			<artifactId>zuul-core</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.4</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<contextPath>/</contextPath>
					<scanIntervalSeconds>3</scanIntervalSeconds>
					<scanTargetPatterns>
						<scanTargetPattern>
							<directory>src/main/webapp</directory>
							<!-- the list has a default value of ** -->
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
							</includes>
						</scanTargetPattern>
					</scanTargetPatterns>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8108</port>
							<maxIdleTime>1000</maxIdleTime>
						</connector>
					</connectors>

					<stopPort>9108</stopPort>
					<stopKey>foo</stopKey>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.1</version>
				<configuration>
					<webappDirectory>
						${project.build.directory}/digg-all
					</webappDirectory>
				</configuration>
			</plugin>
			<!-- 此插件用于执行配置文件替换 -->
			<plugin>
				<groupId>com.juvenxu.portable-config-maven-plugin</groupId>
				<artifactId>portable-config-maven-plugin</artifactId>
				<version>1.1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>replace-package</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<portableConfig>${portableConfig}</portableConfig>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>production</id>
			<!-- 自动激活该配置，除非指定其他profile -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<portableConfig>src/main/resources/portableProduction.xml</portableConfig>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<portableConfig>src/main/resources/portableDevelop.xml</portableConfig>
			</properties>
		</profile>
	</profiles>
</project>
